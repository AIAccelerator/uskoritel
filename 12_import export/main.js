import { Visitor } from './visitor.js';
import { VIPVisitor } from './vipVisitor.js';
import { VIPActivity, VIPBumperCars } from './vipActivity.js';

let visitor = new VIPVisitor('Sally', 100, true);
let vipBumperCars = new VIPBumperCars(15, true);


// –°—ä–∑–¥–∞–≤–∞–º–µ –ø—Ä–æ—Å—Ç–∞ "assert" —Ñ—É–Ω–∫—Ü–∏—è
function assert(condition, message) {
    if (!condition) {
        throw new Error(message || "Test failed");
    }
}

// –¢–≤–æ—è—Ç –∫–æ–¥ —Ç—É–∫ - –∏–º–ø–æ—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –º–æ–¥—É–ª–∏—Ç–µ –∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∏–Ω—Å—Ç–∞–Ω—Ü–∏–∏
// ...

// –¢–µ—Å—Ç–æ–≤–µ

// –¢–µ—Å—Ç –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ canAfford —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç—Ç–∞
function testCanAfford() {
    const poorVisitor = new VIPVisitor('PoorGuy', 5, true);
    assert(
        vipBumperCars.canAfford(poorVisitor).includes('üò¢'),
        "PoorGuy shouldn't be able to afford the VIP Bumper Cars"
    );

    const richVisitor = new VIPVisitor('RichGuy', 100, true);
    assert(
        vipBumperCars.canAfford(richVisitor).includes('üéâ'),
        "RichGuy should be able to afford the VIP Bumper Cars"
    );
}

// –¢–µ—Å—Ç –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ play —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–Ω–æ—Å—Ç—Ç–∞ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–º–µ, —á–µ play –≤—Ä—ä—â–∞ "Success" –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ)
function testPlay() {
    const richVisitor = new VIPVisitor('RichGuy', 100, true);
    assert(vipBumperCars.play(richVisitor) === "Success", "Playing should be successful for RichGuy");
}

// –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–µ—Ç–µ
try {
    testCanAfford();
    //testPlay();
    console.log("All tests passed! üéâ");
} catch (error) {
    console.log(`Test failed üò¢: ${error.message}`);
}
